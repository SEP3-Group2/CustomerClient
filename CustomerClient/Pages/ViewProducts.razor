@page "/products"

@using CustomerClient.Models;
@using CustomerClient.Data;
@inject IProductService ProductService
@inject NavigationManager NavigationManager
@using System.Collections
@using Syncfusion.Blazor.Inputs



<h3>View Products</h3>
<form>
    <label>Title</label><br>
    <input type="text" id="title" @bind-value="Title"><br>
    <label>Category</label><br>
    <select @bind="Category" class="form-control" style="width:200px">
        <option disabled hidden>Select Category...</option>
        <option>All</option>
        <option>Console </option>
        <option>Game </option>
        <option>PC Component</option>
        <option>Laptop </option>
        <option>TV </option>
        <option>Media Player</option>
        <option>Movie </option>
        <option>Speaker </option>
        <option>Kitchen Appliance </option>
        <option>Iron </option>
        <option>Camera </option>
        <option>Phone </option>
        <option>Smart watch</option>
        <option>Headphones </option>
        <option>Electric scooter</option>
        <option>Air Condtion</option>
        <option>Drones </option>
    </select>
    <label>Price</label><br>
    <SfSlider Min="0" Max="10000" @bind-Value="Price" Step="500" Width="300">
        <SliderTooltipData IsVisible="true" ShowOn="TooltipShowOn.Hover" Format="N0" Placement="TooltipPlacement.Before"></SliderTooltipData>
        <SliderTicksData Placement="Placement.After" Format="N0" ShowSmallTicks="false" LargeStep="2500"></SliderTicksData>
    </SfSlider>
</form>

<button @onclick="ExecuteSearch">Search</button>

@if (productsToShow == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else if (!productsToShow.Any())
{
    <p>
        <em>No items exist. </em>
    </p>
}

else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Title</th>
                <th>Category</th>
                <th>Description</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in productsToShow)
            {
                <tr @onclick="()=> TrClickedAtIndex(product.ID)">
                    <td>@product.ID</td>
                    <td>@product.Title</td>
                    <td>@product.Category</td>
                    <td>@product.Description</td>
                    <td>@product.Price</td>
                </tr>
            }
        </tbody>
    </table>
}







@code {
    private IList<Product> productsToShow;
    public int ID;
    public string Title;
    public string Category = "All";
    public string Description;
    public string Price = "20000";

    private Product productToShow = new Product();
   

    //filters here
    private async Task ExecuteSearch()
    {
        productsToShow = await ProductService.GetTitleCategoryPriceFilteredProductsAsync(Title, Category, Price);
        Title = null;
        Category = "All";
    }

    public async Task TrClickedAtIndex(int id)
    {
        ProductService.setProductId(id);
        NavigationManager.NavigateTo("/ProductView");
    }
}
