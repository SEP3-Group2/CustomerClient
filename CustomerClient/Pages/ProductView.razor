@page "/ProductView"
@using CustomerClient.Models;
@using CustomerClient.Data;
@using CustomerClient.Data.ImagesService;
@inject IProductService ProductService
@inject NavigationManager NavigationManager
@inject IImagesService ImageService
@using System.Collections

<div class="container">
    <div class="col-md-9 mx-auto">
        <div class="card card-register">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="product-image">
                            <div id="carouselIndicators" class="carousel slide" data-ride="carousel">
                                <ol class="carousel-indicators">
                                    <li data-target="#carouselIndicators" data-slide-to="0" class="active"></li>
                                    <li data-target="#carouselIndicators" data-slide-to="1"></li>
                                </ol>
                                <div class="carousel-inner">

                                    @for (int i = 0; i < imageDataUrls.Count; i++)
                                    {


                                        if (i == 0)
                                        {
                                            <div class="carousel-item active">
                                                <img class="d-block w-100" src="@imageDataUrls[i]" alt="Second slide">
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="carousel-item">
                                                <img class="d-block w-100" src="@imageDataUrls[i]" alt="Second slide">
                                            </div>
                                        }

                                    }
                                </div>
                                <a class="carousel-control-prev" href="#carouselIndicators" role="button" data-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Previous</span>
                                </a>
                                <a class="carousel-control-next" href="#carouselIndicators" role="button" data-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Next</span>
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">

                        <h4> @productToShow.Title </h4>

                        <p> @productToShow.Description </p>

                        <div class="product_meta">
                            <span class="posted_in"> <strong>Categorie:</strong> <p>@productToShow.Category</p></span>
                        </div>
                        <div> <strong>Price : </strong> <span> @productToShow.Price DKK</span></div>
                        <div class="form-group">
                            <label><strong>Quantity (Max 5): </strong></label>
                            <input class="form-control quantity" type="number" min="0" @bind="quantity" style="width:65px" />
                            @if (quantity > 5)
                            {
                                quantity = 5;
                            }
                            @if (quantity < 1)
                            {
                                quantity = 0;
                            }
                        </div>
                        <p>
                            <button class="btn btn-outline-success" type="button" @onclick="addToCart"><i class="material-icons">add_shopping_cart</i> Add to Cart</button>
                        </p>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private Product productToShow = new Product();
    private ProductQuantity productToCart = new ProductQuantity();
    private int quantity = 0;

    protected override async Task OnInitializedAsync()
    {
        productToShow = await ProductService.GetProductByIdAsync(ProductService.getProductId());
        await GetImagesFromID();
    }

    private IList<string> imageDataUrls = new List<string>();

    private async Task GetImagesFromID()
    {
        Console.WriteLine("Button pressed");
        SaveFile saveFile = await ImageService.GetImages("all", ProductService.getProductId());

        foreach (var file in saveFile.Files)
        {
            string contentType = "images/" + file.FileType.Substring(1);
            if (contentType.Equals("images/jpg"))
            {
                contentType = "images/jpeg";
            }
            imageDataUrls.Add($"data:{contentType};base64,{Convert.ToBase64String(file.Data)}");
        }

        if (saveFile.Files.Count == 0)
        {
            imageDataUrls.Add("../css/ps4.PNG");
        }
    }

    private void addToCart()
    {
        productToCart.Title = productToShow.Title;
        productToCart.Category = productToShow.Category;
        productToCart.ID = productToShow.ID;
        productToCart.Description = productToShow.Description;
        productToCart.Price = productToShow.Price;
        productToCart.Quantity = quantity;

        if (ProductService.getTitles().Contains(productToShow.Title))
        {
            ProductService.getProductsFromCart().First(pr => pr.ID == productToCart.ID).Quantity += quantity;
        }
        if (quantity > 0 && quantity < 6)
        {
            ProductService.addProductToCart(productToCart, quantity);
        }
    }


}
